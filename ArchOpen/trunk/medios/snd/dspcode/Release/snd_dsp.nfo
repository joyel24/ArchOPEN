TMS320C54x C/C++ Optimizer              v4.1.0
Build Number 1FCNR--RSAQQ-VCC-ZAB3_U_R_Q

		======File-level Analysis Summary======


static void DMA_configArgs() is called from 1 sites in this file.
    It appears to be inlineable (size = 57 units)
    It calls these functions:
	IRQ_globalRestore()
	IRQ_globalDisable()

static unsigned DMA_getEventId() is called from 1 sites in this file.
    It appears to be inlineable (size = 4 units)
    It calls these functions:
	<NONE>

static void DMA_start() is called from 1 sites in this file.
    It appears to be inlineable (size = 17 units)
    It calls these functions:
	<NONE>

static void IRQ_clear() is called from 1 sites in this file.
    It appears to be inlineable (size = 14 units)
    It calls these functions:
	IRQ_globalRestore()
	IRQ_globalDisable()

static int IRQ_enable() is called from 1 sites in this file.
    It appears to be inlineable (size = 24 units)
    It calls these functions:
	IRQ_globalRestore()
	IRQ_globalDisable()

static void IRQ_plug() is called from 1 sites in this file.
    It appears to be inlineable (size = 26 units)
    It calls these functions:
	IRQ_globalRestore()
	IRQ_dat2Prg()
	IRQ_globalDisable()

static void MCBSP_write32() is called from 1 sites in this file.
    It appears to be inlineable (size = 32 units)
    It calls these functions:
	<NONE>

static unsigned MCBSP_xrdy() is called from 2 sites in this file.
    It appears to be inlineable (size = 14 units)
    It calls these functions:
	<NONE>

extern void debug() is called from 3 sites in this file.
    It appears to be inlineable (size = 26 units)
    It calls these functions:
	armInt_trigger()
	strcpy()

extern void dmaEnd() is called from 1 sites in this file.
    It calls these functions:
	memset()
	hpiDma_pending()
	hpiDma_start()
	armInt_trigger()
	startDma()

extern void main() is called from 0 sites in this file.
    It calls these functions:
	dmaEnd()
	IRQ_globalEnable()
	IRQ_enable()
	IRQ_clear()
	IRQ_plug()
	IRQ_globalDisable()
	DMA_getEventId()
	DMA_open()
	debug()
	aic23_openPort()
	libDsp_init()
	CSL_init()
	memset()

static void *memset() is called from 2 sites in this file.
    It appears to be inlineable (size = 26 units)
    It calls these functions:
	<NONE>

extern void startDma() is called from 1 sites in this file.
    It appears to be inlineable (size = 52 units)
    It calls these functions:
	DMA_start()
	MCBSP_write32()
	MCBSP_xrdy()
	DMA_configArgs()

static int *strcpy() is called from 1 sites in this file.
    It appears to be inlineable (size = 33 units)
    It calls these functions:
	<NONE>


These functions may be recursive:
	main()
	dmaEnd()
	IRQ_enable()
	IRQ_clear()
	IRQ_plug()
	debug()
	startDma()
	DMA_configArgs()

Function IRQ_plug() will be specialized on these parameters:
	[2] funcAddr == &dmaEnd;

Function MCBSP_write32() will be specialized on these parameters:
	[2] Val == (unsigned long)((long)outBuf[1]|(long)*outBuf*65536L);

Function DMA_configArgs() will be specialized on these parameters:
	[2] priority == 1u;
	[3] dmmcr == 16705u;
	[4] dmsfc == 10240u;
	[6] dmdst == (void (*)())0x22u;
	[7] dmctr == (outBufSize+0xfffeu>>1)+0xffffu;

Results of interprocedural value propagation:

   static void DMA_configArgs() has these parameter attributes:
      unsigned priority :  priority == 1u;
      unsigned dmmcr :    dmmcr == 16705u;
      unsigned dmsfc :    dmsfc == 10240u;
Inlineable function will be suppressed: DMA_configArgs()
Inlineable function will be suppressed: MCBSP_xrdy()
Inlineable function will be suppressed: MCBSP_write32()
Inlineable function will be suppressed: DMA_start()
Inlineable function will be suppressed: memset()
Inlineable function will be suppressed: strcpy()
Inlineable function will be suppressed: DMA_getEventId()
Inlineable function will be suppressed: IRQ_plug()
Inlineable function will be suppressed: IRQ_clear()
Inlineable function will be suppressed: IRQ_enable()

These external functions are called but not defined here:
	CSL_init()
	libDsp_init()
	aic23_openPort()
	DMA_open()
	IRQ_globalEnable()
	hpiDma_start()
	hpiDma_pending()
	armInt_trigger()
	IRQ_dat2Prg()
	IRQ_globalDisable()
	IRQ_globalRestore()


		======= End file-level Analysis =======


extern void startDma() is called from 1 sites in this file.
    It appears to be inlineable (size = 52 units)
    It calls these functions:
	DMA_configArgs()
	MCBSP_xrdy()
	MCBSP_write32()
	DMA_start()

extern void debug() is called from 3 sites in this file.
    It appears to be inlineable (size = 26 units)
    It calls these functions:
	strcpy()

ADVICE: In function debug()
	in the 'while' loop at lines 120-0
	for the statement *d = T$2 = *s; at line 120

	Consider declaring 'msg' as const int * const restrict msg
	or declaring 'dest' as  int * restrict dest
	to assert that 'msg' in the address of *s;
	and            'dest' in the address of *d;
	do not access the same object in memory.

extern void dmaEnd() is called from 1 sites in this file.
    It calls these functions:
	startDma()
	memset()

ADVICE: In function dmaEnd()
	in the 'while' loop at lines 154-157
	for the statement *out = *in; at line 155

	Consider declaring 'out' as unsigned * restrict out
	to assert that lvalues *out;
	and                    *in;
	do not access the same object in memory.

ADVICE: In function dmaEnd()
	in the 'while' loop at lines 154-157
	for the statement *out = *in; at line 156
	and the statement *out = *in; at line 155

	Consider declaring 'out' as unsigned * restrict out
	to assert that lvalues *out;
	and                    *in;
	do not access the same object in memory.

ADVICE: In function dmaEnd()
	in the 'while' loop at lines 154-157
	for the statement *out = *in; at line 155
	and the statement *out = *in; at line 156

	Consider declaring 'out' as unsigned * restrict out
	to assert that lvalues *out;
	and                    *in;
	do not access the same object in memory.

ADVICE: In function dmaEnd()
	in the 'while' loop at lines 154-157
	for the statement *out = *in; at line 156

	Consider declaring 'out' as unsigned * restrict out
	to assert that lvalues *out;
	and                    *in;
	do not access the same object in memory.

extern void main() is called from 0 sites in this file.
    It calls these functions:
	memset()
	debug()
	DMA_getEventId()
	IRQ_plug()
	IRQ_clear()
	IRQ_enable()
	dmaEnd()

		======Unroll-and-jam Result Summary======

LOOP#2 in main() fails to unroll-and-jam: Outer trip count may be NULL
<<NULL MIX DOMAIN>>

== END OF INFO OUTPUT==
