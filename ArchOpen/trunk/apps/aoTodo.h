#ifndef __APPS_AR
#define __APPS_AR

int screen_width,screen_height;
int arch;
char * chooser_items[]={"Low","Normal","High"};

void buildmainMenu();
void buildtextMenu();
void buildeditMenu();
void buildhelpMenu();

extern void handletextMenu();
extern void handleeditMenu();
extern void editMenu_onClick();
extern void displayItems();
extern void getDay();

/**MAIN/TEXTMENU**/
WIDGETLIST mainMenu;
TEXTMENU textMenu;
/**EDITMENU**/
WIDGETLIST editList;
WIDGETMENU editMenu;
/**HELPMENU**/
WIDGETLIST helpList;

void init(void) {

	arch=getArch();
	getResolution(&screen_width,&screen_height);
	
	//create Widgets
	buildmainMenu();
	buildtextMenu();
	buildeditMenu();
	buildhelpMenu();
	
	//paint Mainmenu
	mainMenu->paint(mainMenu);
	mainMenu->setFocusedWidget(mainMenu,textMenu);
	mainMenu->focusedWidget->paint(mainMenu->focusedWidget);
	
}

void buildhelpMenu(void) {

	BUTTON btn;
	LABEL lab;
	
	/**WidgetMenu**/
	helpList=widgetList_create();
	helpList->ownWidgets=true;
	helpList->backColor=COLOR_GREY;
    helpList->fillColor=COLOR_GREY;
	helpList->setRect(helpList,0,0,screen_width,screen_height);
	
	btn=button_create();
	btn->caption="Press any key...";
	btn->setRect(btn,5,(screen_height-25),(screen_width-10),20);
	helpList->addWidget(helpList,btn);
	
	lab=label_create();
	lab->caption="Help";
	lab->font=STD8X13;
	lab->setRect(lab,2,2,(screen_width-4),20);
	lab->alignment=WA_CENTER;
	lab->backColor=COLOR_GREY;
	helpList->addWidget(helpList,lab);
	
	lab=label_create();
	lab->setRect(lab,4,50,(screen_width-4),15);
	lab->caption="aoTodo";
	lab->alignment=WA_LEFT;
	lab->backColor=COLOR_GREY;
	helpList->addWidget(helpList,lab);
	
	//
	lab=label_create();
	lab->setRect(lab,4,60,(screen_width-4),15);
	lab->caption="Version 2.0";
	lab->alignment=WA_LEFT;
	lab->backColor=COLOR_GREY;
	helpList->addWidget(helpList,lab);
	
	lab=label_create();
	lab->setRect(lab,4,85,(screen_width-4),15);
	lab->caption="This application handle your tasks and notes!";
	lab->alignment=WA_LEFT;
	lab->backColor=COLOR_GREY;
	helpList->addWidget(helpList,lab);
	
	//
	lab=label_create();
	lab->setRect(lab,4,110,(screen_width-4),10);
	lab->caption="Use on own risks!";
	lab->alignment=WA_LEFT;
	lab->backColor=COLOR_GREY;
	helpList->addWidget(helpList,lab);

	lab=label_create();
	lab->setRect(lab,4,120,(screen_width-4),20);
	lab->caption="by Pr112";
	lab->alignment=WA_LEFT;
	lab->backColor=COLOR_GREY;
	helpList->addWidget(helpList,lab);	
	
}

void buildtextMenu(void) {

int i;
TEXTMENU_ITEM mi;

	textMenu=textMenu_create();
	textMenu->ownWidgets=true;
	textMenu->backColor=COLOR_GREY;
    textMenu->fillColor=COLOR_GREY;
    textMenu->setRect(textMenu,5,20,(screen_width-10),(screen_height-2*25));
	
	/**Loading Screen**/
	gfx_fontSet(STD7X13);
	gfx_clearScreen(COLOR_GREY);
	gfx_putS(COLOR_BLACK,COLOR_GREY,10,10,"Loading items...");
	gfx_putS(COLOR_BLACK,COLOR_GREY,10,25,"Creating items...");
	
	/**1000 leere erstellen**/
	for(i=0;i<1000;++i) {
	
		mi=textMenuItem_create();
		mi->caption=" ";
		mi->margin=2;
		mi->backColor=COLOR_GREY;
		mi->focusColor=COLOR_LIGHT_GREY;
		//provisorisch
		mi->canFocus=true;
		
		textMenu->addItem(textMenu,mi);
	
	}

	mainMenu->addWidget(mainMenu,textMenu);
	
	displayItems();
	
}

void buildeditMenu(void) {

	BUTTON btn,btn1;
	LABEL lab;
	
	WIDGETMENU_ITEM mi;
	WIDGETMENU_TRACKBAR tr;
	WIDGETMENU_CHOOSER ch;
	
	/**WidgetList**/
	editList=widgetList_create();
	editList->ownWidgets=true;
	editList->backColor=COLOR_GREY;
    editList->fillColor=COLOR_GREY;
	editList->setRect(editList,0,0,screen_width,(screen_height-30));
	
	lab=label_create();
	lab->setRect(lab,2,2,screen_width,screen_height);
	lab->alignment=WA_CENTER;
	lab->font=STD8X13;
	lab->caption="Add Item...";
	lab->backColor=COLOR_GREY;
	editList->addWidget(editList,lab);
	
	btn=button_create();
	btn->setRect(btn,5,(screen_height-25),((screen_width-20)/2),20);
	btn->caption="OK (F1)";
	btn->clickOnRightLeft=false;
	btn->focusColor=COLOR_BLUE;
	editList->addWidget(editList,btn);
	
	btn1=button_create();
	btn1->setRect(btn1,(5*2+((screen_width-20)/2)),(screen_height-25),((screen_width-20)/2),20);
	btn1->caption="Back (F3)";
	btn1->clickOnRightLeft=false;
	btn1->focusColor=COLOR_BLUE;
	editList->addWidget(editList,btn1);
	
	
	/**Widgetmenu**/
    editMenu=widgetMenu_create();
	editMenu->backColor=COLOR_WHITE;
    editMenu->ownWidgets=true;
    editMenu->setRect(editMenu,5,20,(screen_width-10),(screen_height-20-30));
	editMenu->onClick=(MENU_CLICKEVENT) editMenu_onClick;
	
	mi=widgetMenuItem_create();
    mi->caption="Topic:";
    mi->canFocus=false;
    editMenu->addItem(editMenu,mi);

	mi=widgetMenuItem_create();
    mi->caption="...";
    mi->canFocus=true;
    editMenu->addItem(editMenu,mi);
	
	//dummy
	mi=widgetMenuItem_create();
	mi->caption=" ";
    mi->canFocus=false;
	editMenu->addItem(editMenu,mi);
	
	mi=widgetMenuItem_create();
    mi->caption="Description:";
    mi->canFocus=false;
    editMenu->addItem(editMenu,mi);
	
	mi=widgetMenuItem_create();
    mi->caption="...";
    mi->canFocus=true;
    editMenu->addItem(editMenu,mi);	

	//dummy
	mi=widgetMenuItem_create();
	mi->caption=" ";
	mi->canFocus=false;
	editMenu->addItem(editMenu,mi);
	
	mi=widgetMenuItem_create();
    mi->caption="Date:";
    mi->canFocus=false;
    editMenu->addItem(editMenu,mi);
	
	tr=widgetMenuTrackbar_create();
	tr->caption="Day";
	tr->trackbar->value=1;
	tr->trackbar->onChange=getDay;
	editMenu->addItem(editMenu,tr);
    tr->trackbar->setParam(tr->trackbar,1,31,0);

	tr=widgetMenuTrackbar_create();
	tr->caption="Month";
	tr->trackbar->value=1;
	tr->trackbar->onChange=getDay;
	editMenu->addItem(editMenu,tr);
    tr->trackbar->setParam(tr->trackbar,1,12,0);
	
	tr=widgetMenuTrackbar_create();
	tr->caption="Year 20**";
	tr->trackbar->value=8;
	tr->trackbar->onChange=getDay;
	editMenu->addItem(editMenu,tr);
    tr->trackbar->setParam(tr->trackbar,0,99,0);

	//dummy
	mi=widgetMenuItem_create();
	mi->caption=" ";
	//mi->alignment=LA_RIGHT;
	mi->canFocus=false;
	editMenu->addItem(editMenu,mi);
	
	mi=widgetMenuItem_create();
    mi->caption="Importance:";
    mi->canFocus=false;
    editMenu->addItem(editMenu,mi);
	
	ch=widgetMenuChooser_create();
    ch->caption="Priorite";
    ch->chooser->items=chooser_items;
    ch->chooser->itemCount=3;
    ch->chooser->index=1;
    editMenu->addItem(editMenu,ch);
	
	
	editList->addWidget(editList,editMenu);
	editMenu->menuList=editList;

}

void buildmainMenu(void) { 
/***Titelmenu erstellen***/
	BUTTON b,b1,b2;
	LABEL l;
	
	mainMenu=widgetList_create();
	mainMenu->setRect(mainMenu,0,0,screen_width,screen_height);
    mainMenu->ownWidgets=true;
	mainMenu->backColor=COLOR_GREY;
    mainMenu->fillColor=COLOR_GREY;
	
	l=label_create();
    l->font=STD8X13;
    l->alignment=WA_CENTER;
    l->foreColor=COLOR_BLACK;
	l->caption="aoTODO";
	l->backColor=COLOR_GREY;
	l->setRect(l,(screen_width/4),5,((screen_width-20)/2),15);
	mainMenu->addWidget(mainMenu,l);
	
	b=button_create();
	b->setRect(b,5,(screen_height-25),((screen_width-20)/3),20);
	b->caption="Add (F1)";
	b->clickOnRightLeft=false;
	b->onClick=(BUTTON_CLICKEVENT) handletextMenu;
	b->focusColor=COLOR_BLUE;
	mainMenu->addWidget(mainMenu,b);
	
	b1=button_create();
	b1->setRect(b1,5*2+((screen_width-20)/3),(screen_height-25),((screen_width-20)/3),20);
	b1->caption="  Delete (F2)";
	b1->clickOnRightLeft=false;
	b1->onClick=(BUTTON_CLICKEVENT) handleeditMenu;
	b1->focusColor=COLOR_BLUE;
	mainMenu->addWidget(mainMenu,b1);
	
	b2=button_create();
	b2->setRect(b2,5*3+((screen_width-20)/3)*2,(screen_height-25),((screen_width-20)/3),20);
	b2->caption="Help (F3)";	//Options? later?
	b2->clickOnRightLeft=false;
	b2->focusColor=COLOR_BLUE;
	mainMenu->addWidget(mainMenu,b2);
	
	mainMenu->changeFocus(mainMenu,WLD_NEXT);
	
}

/**ICONS**/
static unsigned char add_data[16][16] = {
{0x0f,0x0f,0x0f,0x0f,0x74,0x9f,0xa6,0xd1,0xd1,0xa6,0x9f,0x74,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x9f,0xd1,0x14,0x2e,0x0f,0x0f,0x2e,0x14,0xd1,0x9f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x9f,0x07,0x12,0x14,0x14,0x14,0x14,0x14,0x14,0x12,0x27,0x9f,0x0f,0x0f},
{0x0f,0x9e,0xd1,0xd8,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0xd8,0xd1,0x9f,0x0f},
{0x74,0xa6,0xd1,0x27,0x27,0xd8,0x12,0x14,0x14,0x12,0x12,0x27,0x27,0x07,0xa6,0x74},
{0x02,0xa6,0xd1,0xd1,0x27,0x27,0x12,0x2e,0x2e,0x12,0x27,0x27,0x07,0xd1,0xa6,0x9e},
{0x9f,0xa6,0xd1,0x27,0x27,0x27,0x12,0x2e,0x2e,0x12,0x27,0x27,0x27,0xd1,0xa6,0x9f},
{0x9f,0xa6,0x27,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x27,0xa6,0x9f},
{0x9f,0xa6,0x27,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x27,0xa6,0x9f},
{0x9e,0xa5,0xa6,0xd0,0xd0,0xd0,0x27,0x2e,0x2e,0x27,0xd0,0xd0,0xd0,0xa6,0xa5,0x9e},
{0x02,0x02,0x9e,0x9e,0x9e,0xc9,0xd0,0x2e,0x2e,0xd0,0xc9,0x9e,0x9e,0x9e,0x02,0x02},
{0x74,0x9e,0x9e,0xc9,0xc9,0xcf,0xd7,0x14,0x14,0xd7,0xcf,0xc9,0x9e,0x9e,0x9e,0x74},
{0x0f,0x9e,0xa5,0xc9,0xd0,0xf2,0xf9,0x12,0x12,0xf9,0xf2,0xcf,0xc9,0x9f,0x9e,0x0f},
{0x0f,0x0f,0x9f,0xd0,0xf2,0xf9,0x27,0xd8,0xd8,0x27,0xf9,0xd0,0xcf,0x9f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x9f,0xd0,0xf9,0xfa,0xff,0xff,0xfa,0xf9,0xd0,0x9f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x74,0x9f,0xca,0xd1,0xd1,0xca,0x9f,0x74,0x0f,0x0f,0x0f,0x0f}};

static unsigned char delete_data[16][16] = {
{0x0f,0x0f,0x0f,0x0f,0x5d,0x20,0x16,0xb3,0xb3,0x16,0x20,0x5d,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x20,0xb3,0x14,0x2e,0x0f,0x0f,0x2e,0x14,0xb3,0x88,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x88,0x15,0x14,0x14,0x2e,0x2e,0x2e,0x2e,0x14,0x14,0x15,0x88,0x0f,0x0f},
{0x0f,0x20,0xb3,0x15,0x12,0x14,0x14,0x14,0x14,0x14,0x14,0x12,0x15,0xb3,0x20,0x0f},
{0x5d,0x88,0xb3,0xd8,0x12,0x12,0x14,0x14,0x14,0x14,0x12,0x12,0xd8,0xb3,0x88,0x5d},
{0x20,0x16,0xb3,0x15,0x14,0x14,0x14,0x12,0x12,0x14,0x14,0x14,0x15,0xb3,0x16,0x20},
{0x20,0x88,0xb3,0xb3,0x15,0x2e,0x2e,0x2e,0x2e,0x2e,0x2e,0x15,0xb3,0xb3,0x88,0x20},
{0x20,0x88,0x8e,0xb3,0xb3,0x15,0x0f,0x0f,0x0f,0x0f,0x15,0xb3,0xb3,0x8e,0x88,0x20},
{0x20,0x88,0x8e,0x8e,0x8e,0xb3,0x0f,0x0f,0x0f,0x0f,0xb3,0x8e,0x8e,0x8e,0x88,0x20},
{0x63,0x63,0x63,0x40,0x8e,0x2e,0x2e,0x2e,0x2e,0x2e,0x2e,0x8e,0x40,0x63,0x63,0x63},
{0x5d,0x40,0x40,0x8e,0x14,0x14,0x14,0xb2,0xb2,0x14,0x14,0x14,0x8e,0x40,0x40,0x63},
{0x5d,0x63,0x40,0x8e,0x12,0x12,0xb3,0x69,0x69,0xb3,0x12,0x12,0x8e,0x40,0x63,0x5d},
{0x0f,0x63,0x68,0x46,0x8e,0xb3,0x94,0x94,0x94,0x94,0xb3,0x8e,0x46,0x46,0x63,0x0f},
{0x0f,0x0f,0x63,0x69,0x69,0x94,0x2c,0x2c,0x2c,0x2c,0x94,0x69,0x69,0x63,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x20,0x8e,0x2c,0xb9,0xb9,0xb9,0xb9,0x2c,0x8e,0x63,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x5d,0x20,0x8e,0xb3,0xb3,0x8e,0x88,0x5d,0x0f,0x0f,0x0f,0x0f}};

static unsigned char help_data[16][16] = {
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x82,0x07,0x15,0xb2,0x8d,0x8d,0x87,0x57,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x13,0x14,0x0f,0x2e,0x8c,0x68,0x68,0x62,0x20,0x5d,0x0f,0x0f,0x0f},
{0x0f,0x0f,0xad,0x2e,0x0f,0x0f,0x14,0x8d,0x62,0x62,0x40,0x69,0x12,0x08,0x0f,0x0f},
{0x0f,0x5d,0xdd,0xb7,0x14,0x12,0x08,0x57,0x34,0x1a,0x20,0x12,0x0f,0x12,0x57,0x0f},
{0x0f,0x16,0xb7,0x92,0x8d,0x57,0x0f,0x0f,0x0f,0x0f,0x57,0xd8,0x2e,0x2e,0xad,0x0f},
{0x0f,0xb2,0x92,0x8c,0x5c,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x08,0x12,0x2e,0xb3,0x0f},
{0x0f,0xb2,0x8c,0x68,0x1a,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x57,0x8d,0x68,0x8d,0x0f},
{0x0f,0x8d,0x68,0x8d,0x57,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x1a,0x68,0x8c,0x8e,0x0f},
{0x0f,0x13,0x2e,0x2e,0xad,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x62,0x8c,0x92,0xb2,0x0f},
{0x0f,0x08,0x14,0x0f,0x12,0x82,0x0f,0x0f,0x0f,0x0f,0x82,0x8d,0x92,0xb7,0x88,0x0f},
{0x0f,0x10,0xd8,0x2e,0x14,0x63,0x3a,0x1a,0x5d,0x13,0x14,0x2e,0xb7,0xd7,0x57,0x0f},
{0x0f,0x0f,0x58,0x12,0x63,0x40,0x62,0x68,0x8d,0x2e,0x0f,0x2e,0x2e,0x82,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x10,0x20,0x62,0x68,0x68,0x8c,0x2e,0x2e,0x12,0x82,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x03,0x5d,0x20,0x8d,0x8e,0x13,0x08,0x10,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x03,0x03,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f}};

static unsigned char abort_data[16][16] = {
{0x0f,0x0f,0x0f,0x0f,0x0f,0x3a,0x04,0x63,0x63,0x63,0x5d,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x3a,0x04,0x04,0x63,0x63,0x8e,0xb3,0xb3,0xb3,0x63,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x04,0x40,0x40,0x04,0x63,0x5d,0x5d,0x88,0xb3,0x14,0xde,0x88,0x0f,0x0f},
{0x0f,0x04,0x46,0x40,0x40,0x04,0x0f,0x0f,0x0f,0x0f,0x1a,0x8e,0x14,0x14,0x63,0x0f},
{0x0f,0x46,0x46,0x46,0x40,0x40,0x04,0x0f,0x0f,0x0f,0x0f,0x0f,0x8e,0x14,0xb3,0x0f},
{0x3a,0x69,0x46,0x04,0x46,0x46,0x69,0x04,0x0f,0x0f,0x0f,0x0f,0x0f,0xb3,0x15,0x63},
{0x63,0x69,0x63,0x0f,0x3a,0x46,0x46,0x69,0x04,0x0f,0x0f,0x0f,0x0f,0x88,0xb3,0x88},
{0x63,0x69,0x63,0x0f,0x0f,0x3a,0x46,0x69,0x69,0x04,0x0f,0x0f,0x0f,0x5d,0x8e,0x88},
{0x63,0x6f,0x63,0x0f,0x0f,0x0f,0x3a,0x46,0x69,0x69,0x04,0x0f,0x0f,0x5d,0x63,0x63},
{0x63,0x94,0x69,0x0f,0x0f,0x0f,0x0f,0x3a,0x46,0x46,0x69,0x04,0x0f,0x63,0x63,0x63},
{0x5d,0x2c,0x8e,0x5d,0x0f,0x0f,0x0f,0x0f,0x3a,0x46,0x46,0x40,0x04,0x04,0x04,0x3a},
{0x0f,0x8e,0xb9,0x8e,0x0f,0x0f,0x0f,0x0f,0x0f,0x3a,0x46,0x40,0x40,0x40,0x04,0x0f},
{0x0f,0x63,0xb9,0xb9,0x8e,0x3a,0x0f,0x0f,0x0f,0x0f,0x04,0x40,0x40,0x40,0x04,0x0f},
{0x0f,0x0f,0x63,0xb9,0xb9,0x8e,0x69,0x63,0x04,0x40,0x46,0x46,0x46,0x04,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x63,0x8e,0x2c,0x94,0x6f,0x69,0x69,0x69,0x46,0x04,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x5d,0x63,0x69,0x69,0x63,0x04,0x0f,0x0f,0x0f,0x0f,0x0f}};

static unsigned char uebernehmen_data[16][16] = {
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0xac,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x82,0xd7,0xf9,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0xd0,0xd7,0xd7,0xd7,0xd0,0xac,0xac,0x21,0x21,0x21,0xa6,0x21,0x21},
{0x0f,0xa5,0xd0,0xd0,0xd0,0xd0,0xd6,0xd6,0xd6,0xd6,0xd0,0xd0,0xd0,0xd0,0xd0,0xac},
{0xa5,0xa5,0xa5,0xc9,0xcf,0xcf,0xcf,0xcf,0xcf,0xcf,0xcf,0xcf,0xc9,0xa5,0xa5,0xa5},
{0x7a,0x9e,0xa4,0xa4,0xa4,0xc8,0xce,0xce,0xce,0xce,0xc8,0xa4,0xa4,0x9e,0x9e,0x9e},
{0x7a,0x7a,0x7a,0xa4,0xc8,0xc8,0xce,0xa4,0xc8,0xa4,0xa4,0xa4,0xa4,0xa4,0xa4,0xa4},
{0x0f,0x7a,0x7a,0x7a,0x9e,0xc8,0xce,0x9e,0x9e,0x9e,0x9e,0xa4,0xa4,0xa4,0xa4,0xa4},
{0x0f,0x0f,0x0f,0x7a,0x7a,0x7a,0xa4,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x7a,0x7a,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x56,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f}};

static unsigned char home_data[16][16] = {
{0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0x0f,0xad,0xad,0x07,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x0f,0x5c,0x63,0x63,0x5d,0x16,0x88,0x16,0x0f,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x0f,0x3a,0x62,0x62,0x62,0x68,0x8c,0x62,0x63,0x87,0x0f,0x0f,0x0f,0x0f},
{0x0f,0x0f,0x3a,0x62,0x62,0x62,0x68,0x8c,0x8c,0x8c,0x8c,0x8d,0x40,0x0f,0x0f,0x0f},
{0x0f,0x3a,0x62,0x62,0x62,0x68,0x8c,0x8c,0x92,0x29,0xb1,0xd7,0x8e,0x62,0x0f,0x0f},
{0x3a,0x62,0x62,0x62,0x68,0x8c,0x8c,0x29,0x29,0xb1,0xd7,0x15,0x15,0xb2,0x62,0x0f},
{0x04,0x62,0x62,0x62,0x68,0x8c,0x92,0x29,0xb1,0x15,0x07,0xd8,0x15,0xde,0xb2,0x63},
{0x5c,0x16,0x87,0x62,0x68,0x8c,0x29,0xb1,0x15,0x14,0x07,0x07,0x15,0x14,0xde,0x8e},
{0x0f,0x15,0xd7,0xd7,0xb2,0x8d,0x8d,0x15,0x14,0x14,0x14,0x14,0x14,0xde,0xde,0x0f},
{0x0f,0x14,0x15,0x15,0xd7,0xd7,0xb2,0x15,0xde,0x15,0xb2,0x87,0x87,0x15,0x15,0x0f},
{0x0f,0x14,0x15,0x12,0xd8,0x15,0xd7,0x15,0x15,0xd7,0x87,0x87,0x87,0x15,0x15,0x0f},
{0x0f,0x14,0x15,0x26,0xd2,0x07,0x15,0x15,0x15,0xd7,0x87,0x87,0x20,0x15,0xd7,0x0f},
{0x0f,0xd7,0x14,0xd8,0x07,0x07,0x15,0x15,0x15,0xd7,0x06,0x06,0x20,0xd7,0xd7,0x0f},
{0x0f,0x03,0x82,0x07,0x14,0x14,0x15,0xd7,0xd7,0xb3,0x5c,0x5c,0x20,0xd7,0xd7,0x57},
{0x0f,0x0f,0x0f,0x03,0x57,0x08,0xd7,0xd7,0xd7,0x16,0x5c,0x06,0x06,0x5c,0x10,0x03},
{0x0f,0x0f,0x0f,0x0f,0x0f,0x03,0x03,0x10,0x03,0x03,0x03,0x03,0x03,0x03,0x0f,0x0f}};

static BITMAP home_bitmap = {(unsigned int) home_data, 16, 16, 0, 0};
static BITMAP uebernehmen_bitmap = {(unsigned int) uebernehmen_data, 16, 16, 0, 0};
static BITMAP abort_bitmap = {(unsigned int) abort_data, 16, 16, 0, 0};
static BITMAP help_bitmap = {(unsigned int) help_data, 16, 16, 0, 0};
static BITMAP add_bitmap = {(unsigned int) add_data, 16, 16, 0, 0};
static BITMAP delete_bitmap = {(unsigned int) delete_data, 16, 16, 0, 0};


#endif
